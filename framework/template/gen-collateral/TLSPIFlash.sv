// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module TLSPIFlash(
  input         clock,
                reset,
                auto_mem_xing_in_a_valid,
                auto_mem_xing_in_a_bits_size,
  input  [11:0] auto_mem_xing_in_a_bits_source,
  input  [29:0] auto_mem_xing_in_a_bits_address,
  input         auto_mem_xing_in_d_ready,
                auto_control_xing_in_a_valid,
  input  [2:0]  auto_control_xing_in_a_bits_opcode,
  input  [1:0]  auto_control_xing_in_a_bits_size,
  input  [8:0]  auto_control_xing_in_a_bits_source,
  input  [28:0] auto_control_xing_in_a_bits_address,
  input  [7:0]  auto_control_xing_in_a_bits_mask,
  input  [63:0] auto_control_xing_in_a_bits_data,
  input         auto_control_xing_in_d_ready,
                auto_io_out_dq_0_i,
                auto_io_out_dq_1_i,
                auto_io_out_dq_2_i,
                auto_io_out_dq_3_i,
  output        auto_int_xing_out_sync_0,
                auto_mem_xing_in_a_ready,
                auto_mem_xing_in_d_valid,
                auto_mem_xing_in_d_bits_size,
  output [11:0] auto_mem_xing_in_d_bits_source,
  output [7:0]  auto_mem_xing_in_d_bits_data,
  output        auto_control_xing_in_a_ready,
                auto_control_xing_in_d_valid,
  output [2:0]  auto_control_xing_in_d_bits_opcode,
  output [1:0]  auto_control_xing_in_d_bits_size,
  output [8:0]  auto_control_xing_in_d_bits_source,
  output [63:0] auto_control_xing_in_d_bits_data,
  output        auto_io_out_sck,
                auto_io_out_dq_0_o,
                auto_io_out_dq_0_ie,
                auto_io_out_dq_0_oe,
                auto_io_out_dq_1_o,
                auto_io_out_dq_1_ie,
                auto_io_out_dq_1_oe,
                auto_io_out_dq_2_o,
                auto_io_out_dq_2_ie,
                auto_io_out_dq_2_oe,
                auto_io_out_dq_3_o,
                auto_io_out_dq_3_ie,
                auto_io_out_dq_3_oe,
                auto_io_out_cs_0
);

  wire              out_woready_15;	// @[RegisterRouter.scala:83:24]
  wire              _out_wofireMux_T;	// @[RegisterRouter.scala:83:24]
  wire              out_backSel_9;	// @[RegisterRouter.scala:83:24]
  wire              quash;	// @[RegMapFIFO.scala:26:26]
  wire              _arb_io_inner_0_tx_ready;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_inner_0_rx_valid;	// @[TLSPIFlash.scala:58:19]
  wire [7:0]        _arb_io_inner_0_rx_bits;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_inner_0_active;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_inner_1_tx_ready;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_inner_1_rx_valid;	// @[TLSPIFlash.scala:58:19]
  wire [7:0]        _arb_io_inner_1_rx_bits;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_outer_tx_valid;	// @[TLSPIFlash.scala:58:19]
  wire [7:0]        _arb_io_outer_tx_bits;	// @[TLSPIFlash.scala:58:19]
  wire [7:0]        _arb_io_outer_cnt;	// @[TLSPIFlash.scala:58:19]
  wire [1:0]        _arb_io_outer_fmt_proto;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_outer_fmt_endian;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_outer_fmt_iodir;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_outer_cs_set;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_outer_cs_clear;	// @[TLSPIFlash.scala:58:19]
  wire              _arb_io_outer_cs_hold;	// @[TLSPIFlash.scala:58:19]
  wire              _flash_io_addr_ready;	// @[TLSPIFlash.scala:57:21]
  wire              _flash_io_link_tx_valid;	// @[TLSPIFlash.scala:57:21]
  wire [7:0]        _flash_io_link_tx_bits;	// @[TLSPIFlash.scala:57:21]
  wire [7:0]        _flash_io_link_cnt;	// @[TLSPIFlash.scala:57:21]
  wire [1:0]        _flash_io_link_fmt_proto;	// @[TLSPIFlash.scala:57:21]
  wire              _flash_io_link_fmt_endian;	// @[TLSPIFlash.scala:57:21]
  wire              _flash_io_link_fmt_iodir;	// @[TLSPIFlash.scala:57:21]
  wire              _flash_io_link_cs_clear;	// @[TLSPIFlash.scala:57:21]
  wire              _flash_io_link_lock;	// @[TLSPIFlash.scala:57:21]
  wire              _mac_io_link_tx_ready;	// @[TLSPI.scala:69:19]
  wire              _mac_io_link_rx_valid;	// @[TLSPI.scala:69:19]
  wire [7:0]        _mac_io_link_rx_bits;	// @[TLSPI.scala:69:19]
  wire              _mac_io_link_active;	// @[TLSPI.scala:69:19]
  wire              _fifo_io_link_tx_valid;	// @[TLSPI.scala:68:20]
  wire [7:0]        _fifo_io_link_tx_bits;	// @[TLSPI.scala:68:20]
  wire [7:0]        _fifo_io_link_cnt;	// @[TLSPI.scala:68:20]
  wire [1:0]        _fifo_io_link_fmt_proto;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_link_fmt_endian;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_link_fmt_iodir;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_link_cs_set;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_link_cs_clear;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_link_lock;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_tx_ready;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_rx_valid;	// @[TLSPI.scala:68:20]
  wire [7:0]        _fifo_io_rx_bits;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_ip_txwm;	// @[TLSPI.scala:68:20]
  wire              _fifo_io_ip_rxwm;	// @[TLSPI.scala:68:20]
  reg  [1:0]        ctrl_fmt_proto;	// @[TLSPI.scala:67:17]
  reg               ctrl_fmt_endian;	// @[TLSPI.scala:67:17]
  reg               ctrl_fmt_iodir;	// @[TLSPI.scala:67:17]
  reg  [3:0]        ctrl_fmt_len;	// @[TLSPI.scala:67:17]
  reg  [11:0]       ctrl_sck_div;	// @[TLSPI.scala:67:17]
  reg               ctrl_sck_pol;	// @[TLSPI.scala:67:17]
  reg               ctrl_sck_pha;	// @[TLSPI.scala:67:17]
  reg               ctrl_cs_id;	// @[TLSPI.scala:67:17]
  reg               ctrl_cs_dflt_0;	// @[TLSPI.scala:67:17]
  reg  [1:0]        ctrl_cs_mode;	// @[TLSPI.scala:67:17]
  reg  [7:0]        ctrl_dla_cssck;	// @[TLSPI.scala:67:17]
  reg  [7:0]        ctrl_dla_sckcs;	// @[TLSPI.scala:67:17]
  reg  [7:0]        ctrl_dla_intercs;	// @[TLSPI.scala:67:17]
  reg  [7:0]        ctrl_dla_interxfr;	// @[TLSPI.scala:67:17]
  reg  [3:0]        ctrl_wm_tx;	// @[TLSPI.scala:67:17]
  reg  [3:0]        ctrl_wm_rx;	// @[TLSPI.scala:67:17]
  reg  [11:0]       ctrl_extradel_coarse;	// @[TLSPI.scala:67:17]
  reg  [4:0]        ctrl_sampledel_sd;	// @[TLSPI.scala:67:17]
  reg               ie_txwm;	// @[TLSPI.scala:81:15]
  reg               ie_rxwm;	// @[TLSPI.scala:81:15]
  reg               a_size;	// @[TLSPIFlash.scala:66:14]
  reg  [11:0]       a_source;	// @[TLSPIFlash.scala:66:14]
  reg  [29:0]       a_address;	// @[TLSPIFlash.scala:66:14]
  reg  [1:0]        insn_cmd_proto;	// @[TLSPIFlash.scala:82:17]
  reg  [7:0]        insn_cmd_code;	// @[TLSPIFlash.scala:82:17]
  reg               insn_cmd_en;	// @[TLSPIFlash.scala:82:17]
  reg  [1:0]        insn_addr_proto;	// @[TLSPIFlash.scala:82:17]
  reg  [2:0]        insn_addr_len;	// @[TLSPIFlash.scala:82:17]
  reg  [7:0]        insn_pad_code;	// @[TLSPIFlash.scala:82:17]
  reg  [3:0]        insn_pad_cnt;	// @[TLSPIFlash.scala:82:17]
  reg  [1:0]        insn_data_proto;	// @[TLSPIFlash.scala:82:17]
  reg               flash_en;	// @[TLSPIFlash.scala:83:21]
  wire              out_front_bits_read = auto_control_xing_in_a_bits_opcode == 3'h4;	// @[RegisterRouter.scala:72:36]
  wire              _out_out_bits_data_WIRE_14 = auto_control_xing_in_a_bits_address[11:7] == 5'h0;	// @[Edges.scala:192:34, RegisterRouter.scala:73:19, :83:24]
  assign quash = out_woready_15 & auto_control_xing_in_a_bits_mask[3] & auto_control_xing_in_a_bits_data[31];	// @[Bitwise.scala:28:17, RegMapFIFO.scala:26:26, RegisterRouter.scala:83:24]
  assign out_backSel_9 = auto_control_xing_in_a_bits_address[6:3] == 4'h9;	// @[Cat.scala:33:92, OneHot.scala:57:35, RegisterRouter.scala:83:24]
  assign _out_wofireMux_T = auto_control_xing_in_a_valid & auto_control_xing_in_d_ready;	// @[RegisterRouter.scala:83:24]
  wire              _out_wofireMux_T_2 = _out_wofireMux_T & ~out_front_bits_read;	// @[RegisterRouter.scala:72:36, :83:24]
  wire              out_woready_2 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'h0 & _out_out_bits_data_WIRE_14;	// @[Cat.scala:33:92, RegisterRouter.scala:83:24]
  wire              out_woready_20 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'h2 & _out_out_bits_data_WIRE_14;	// @[Cat.scala:33:92, OneHot.scala:57:35, RegisterRouter.scala:83:24]
  wire              out_woready_6 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'h5 & _out_out_bits_data_WIRE_14;	// @[Cat.scala:33:92, OneHot.scala:57:35, RegisterRouter.scala:83:24]
  wire              out_woready_31 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'h7 & _out_out_bits_data_WIRE_14;	// @[Cat.scala:33:92, OneHot.scala:57:35, RegisterRouter.scala:83:24]
  wire              out_woready_36 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'h8 & _out_out_bits_data_WIRE_14;	// @[Cat.scala:33:92, RegisterRouter.scala:83:24, SPIBundle.scala:86:18]
  assign out_woready_15 = _out_wofireMux_T_2 & out_backSel_9 & _out_out_bits_data_WIRE_14;	// @[RegisterRouter.scala:83:24]
  wire              out_woready_8 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'hA & _out_out_bits_data_WIRE_14;	// @[Cat.scala:33:92, OneHot.scala:57:35, RegisterRouter.scala:83:24]
  wire              out_woready_29 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'hC & _out_out_bits_data_WIRE_14;	// @[Cat.scala:33:92, OneHot.scala:57:35, RegisterRouter.scala:83:24]
  wire              out_woready_10 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'hE & _out_out_bits_data_WIRE_14;	// @[Cat.scala:33:92, OneHot.scala:57:35, RegisterRouter.scala:83:24]
  wire [15:0]       _GEN = {{1'h1}, {_out_out_bits_data_WIRE_14}, {1'h1}, {_out_out_bits_data_WIRE_14}, {1'h1}, {_out_out_bits_data_WIRE_14}, {_out_out_bits_data_WIRE_14}, {_out_out_bits_data_WIRE_14}, {_out_out_bits_data_WIRE_14}, {1'h1}, {_out_out_bits_data_WIRE_14}, {1'h1}, {_out_out_bits_data_WIRE_14}, {_out_out_bits_data_WIRE_14}, {1'h1}, {_out_out_bits_data_WIRE_14}};	// @[MuxLiteral.scala:49:10, RegisterRouter.scala:83:24, TLSPIFlash.scala:58:19]
  wire [15:0][63:0] _GEN_0 = {{64'h0}, {{30'h0, _fifo_io_ip_rxwm, _fifo_io_ip_txwm, 30'h0, ie_rxwm, ie_txwm}}, {64'h0}, {{insn_pad_code, insn_cmd_code, 2'h0, insn_data_proto, insn_addr_proto, insn_cmd_proto, insn_pad_cnt, insn_addr_len, insn_cmd_en, 31'h0, flash_en}}, {64'h0}, {{28'h0, ctrl_wm_rx, 28'h0, ctrl_wm_tx}}, {{~_fifo_io_rx_valid, 23'h0, _fifo_io_rx_bits, ~_fifo_io_tx_ready, 31'h0}}, {{44'h0, ctrl_fmt_len, 12'h0, ctrl_fmt_iodir, ctrl_fmt_endian, ctrl_fmt_proto}}, {{27'h0, ctrl_sampledel_sd, 20'h0, ctrl_extradel_coarse}}, {64'h0}, {{8'h0, ctrl_dla_interxfr, 8'h0, ctrl_dla_intercs, 8'h0, ctrl_dla_sckcs, 8'h0, ctrl_dla_cssck}}, {64'h0}, {{62'h0, ctrl_cs_mode}}, {{31'h0, ctrl_cs_dflt_0, 31'h0, ctrl_cs_id}}, {64'h0}, {{30'h0, ctrl_sck_pol, ctrl_sck_pha, 20'h0, ctrl_sck_div}}};	// @[Bundles.scala:259:74, Cat.scala:33:92, MuxLiteral.scala:49:{10,48}, RegMapFIFO.scala:24:9, :45:21, RegisterRouter.scala:83:24, TLSPI.scala:67:17, :68:20, :81:15, TLSPIFlash.scala:82:17, :83:21]
  wire [11:0]       _out_womask_T_30 = {{4{auto_control_xing_in_a_bits_mask[1]}}, {8{auto_control_xing_in_a_bits_mask[0]}}};	// @[Bitwise.scala:28:17, :77:12, RegisterRouter.scala:83:24]
  always @(posedge clock) begin
    if (reset) begin
      ctrl_fmt_proto <= 2'h0;	// @[Bundles.scala:259:74, TLSPI.scala:67:17]
      ctrl_fmt_endian <= 1'h0;	// @[TLSPI.scala:67:17]
      ctrl_fmt_iodir <= 1'h0;	// @[TLSPI.scala:67:17]
      ctrl_fmt_len <= 4'h8;	// @[SPIBundle.scala:86:18, TLSPI.scala:67:17]
      ctrl_sck_div <= 12'h3;	// @[SPIBundle.scala:87:18, TLSPI.scala:67:17]
      ctrl_sck_pol <= 1'h0;	// @[TLSPI.scala:67:17]
      ctrl_sck_pha <= 1'h0;	// @[TLSPI.scala:67:17]
      ctrl_cs_id <= 1'h0;	// @[TLSPI.scala:67:17]
      ctrl_cs_dflt_0 <= 1'h1;	// @[TLSPI.scala:67:17, TLSPIFlash.scala:58:19]
      ctrl_cs_mode <= 2'h0;	// @[Bundles.scala:259:74, TLSPI.scala:67:17]
      ctrl_dla_cssck <= 8'h1;	// @[SPIBundle.scala:93:20, TLSPI.scala:67:17]
      ctrl_dla_sckcs <= 8'h1;	// @[SPIBundle.scala:93:20, TLSPI.scala:67:17]
      ctrl_dla_intercs <= 8'h1;	// @[SPIBundle.scala:93:20, TLSPI.scala:67:17]
      ctrl_dla_interxfr <= 8'h0;	// @[Bundles.scala:259:74, TLSPI.scala:67:17]
      ctrl_wm_tx <= 4'h0;	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      ctrl_wm_rx <= 4'h0;	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      ctrl_extradel_coarse <= 12'h0;	// @[Bundles.scala:259:74, TLSPI.scala:67:17]
      ctrl_sampledel_sd <= 5'h3;	// @[SPIBundle.scala:101:23, TLSPI.scala:67:17]
      ie_txwm <= 1'h0;	// @[TLSPI.scala:81:15]
      ie_rxwm <= 1'h0;	// @[TLSPI.scala:81:15]
      insn_cmd_proto <= 2'h0;	// @[Bundles.scala:259:74, TLSPIFlash.scala:82:17]
      insn_cmd_code <= 8'h3;	// @[SPIFlash.scala:33:19, TLSPIFlash.scala:82:17]
      insn_cmd_en <= 1'h1;	// @[TLSPIFlash.scala:58:19, :82:17]
      insn_addr_proto <= 2'h0;	// @[Bundles.scala:259:74, TLSPIFlash.scala:82:17]
      insn_addr_len <= 3'h3;	// @[SPIFlash.scala:35:19, TLSPIFlash.scala:82:17]
      insn_pad_code <= 8'h0;	// @[Bundles.scala:259:74, TLSPIFlash.scala:82:17]
      insn_pad_cnt <= 4'h0;	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      insn_data_proto <= 2'h0;	// @[Bundles.scala:259:74, TLSPIFlash.scala:82:17]
      flash_en <= 1'h1;	// @[TLSPIFlash.scala:58:19, :83:21]
    end
    else begin
      if (out_woready_36 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_fmt_proto <= auto_control_xing_in_a_bits_data[1:0];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_36 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_fmt_endian <= auto_control_xing_in_a_bits_data[2];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_36 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_fmt_iodir <= auto_control_xing_in_a_bits_data[3];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_36 & auto_control_xing_in_a_bits_mask[2])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_fmt_len <= auto_control_xing_in_a_bits_data[19:16];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_2 & (&_out_womask_T_30))	// @[RegisterRouter.scala:83:24]
        ctrl_sck_div <= auto_control_xing_in_a_bits_data[11:0];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_2 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_sck_pol <= auto_control_xing_in_a_bits_data[33];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_2 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_sck_pha <= auto_control_xing_in_a_bits_data[32];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_20 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_cs_id <= auto_control_xing_in_a_bits_data[0];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_20 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_cs_dflt_0 <= auto_control_xing_in_a_bits_data[32];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (_out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[6:3] == 4'h3 & _out_out_bits_data_WIRE_14 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, Cat.scala:33:92, OneHot.scala:57:35, RegisterRouter.scala:83:24]
        ctrl_cs_mode <= auto_control_xing_in_a_bits_data[1:0];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_6 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_dla_cssck <= auto_control_xing_in_a_bits_data[7:0];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_6 & auto_control_xing_in_a_bits_mask[2])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_dla_sckcs <= auto_control_xing_in_a_bits_data[23:16];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_6 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_dla_intercs <= auto_control_xing_in_a_bits_data[39:32];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_6 & auto_control_xing_in_a_bits_mask[6])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_dla_interxfr <= auto_control_xing_in_a_bits_data[55:48];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_8 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_wm_tx <= auto_control_xing_in_a_bits_data[3:0];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_8 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_wm_rx <= auto_control_xing_in_a_bits_data[35:32];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_31 & (&_out_womask_T_30))	// @[RegisterRouter.scala:83:24]
        ctrl_extradel_coarse <= auto_control_xing_in_a_bits_data[11:0];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_31 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ctrl_sampledel_sd <= auto_control_xing_in_a_bits_data[36:32];	// @[RegisterRouter.scala:83:24, TLSPI.scala:67:17]
      if (out_woready_10 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ie_txwm <= auto_control_xing_in_a_bits_data[0];	// @[RegisterRouter.scala:83:24, TLSPI.scala:81:15]
      if (out_woready_10 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        ie_rxwm <= auto_control_xing_in_a_bits_data[1];	// @[RegisterRouter.scala:83:24, TLSPI.scala:81:15]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[5])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        insn_cmd_proto <= auto_control_xing_in_a_bits_data[41:40];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[6])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        insn_cmd_code <= auto_control_xing_in_a_bits_data[55:48];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        insn_cmd_en <= auto_control_xing_in_a_bits_data[32];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[5])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        insn_addr_proto <= auto_control_xing_in_a_bits_data[43:42];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        insn_addr_len <= auto_control_xing_in_a_bits_data[35:33];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[7])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        insn_pad_code <= auto_control_xing_in_a_bits_data[63:56];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[4])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        insn_pad_cnt <= auto_control_xing_in_a_bits_data[39:36];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[5])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        insn_data_proto <= auto_control_xing_in_a_bits_data[45:44];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:82:17]
      if (out_woready_29 & auto_control_xing_in_a_bits_mask[0])	// @[Bitwise.scala:28:17, RegisterRouter.scala:83:24]
        flash_en <= auto_control_xing_in_a_bits_data[0];	// @[RegisterRouter.scala:83:24, TLSPIFlash.scala:83:21]
    end
    if (_flash_io_addr_ready & auto_mem_xing_in_a_valid) begin	// @[Decoupled.scala:51:35, TLSPIFlash.scala:57:21]
      a_size <= auto_mem_xing_in_a_bits_size;	// @[TLSPIFlash.scala:66:14]
      a_source <= auto_mem_xing_in_a_bits_source;	// @[TLSPIFlash.scala:66:14]
      a_address <= auto_mem_xing_in_a_bits_address;	// @[TLSPIFlash.scala:66:14]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        ctrl_fmt_proto = _RANDOM_0[1:0];	// @[TLSPI.scala:67:17]
        ctrl_fmt_endian = _RANDOM_0[2];	// @[TLSPI.scala:67:17]
        ctrl_fmt_iodir = _RANDOM_0[3];	// @[TLSPI.scala:67:17]
        ctrl_fmt_len = _RANDOM_0[7:4];	// @[TLSPI.scala:67:17]
        ctrl_sck_div = _RANDOM_0[19:8];	// @[TLSPI.scala:67:17]
        ctrl_sck_pol = _RANDOM_0[20];	// @[TLSPI.scala:67:17]
        ctrl_sck_pha = _RANDOM_0[21];	// @[TLSPI.scala:67:17]
        ctrl_cs_id = _RANDOM_0[22];	// @[TLSPI.scala:67:17]
        ctrl_cs_dflt_0 = _RANDOM_0[23];	// @[TLSPI.scala:67:17]
        ctrl_cs_mode = _RANDOM_0[25:24];	// @[TLSPI.scala:67:17]
        ctrl_dla_cssck = {_RANDOM_0[31:26], _RANDOM_1[1:0]};	// @[TLSPI.scala:67:17]
        ctrl_dla_sckcs = _RANDOM_1[9:2];	// @[TLSPI.scala:67:17]
        ctrl_dla_intercs = _RANDOM_1[17:10];	// @[TLSPI.scala:67:17]
        ctrl_dla_interxfr = _RANDOM_1[25:18];	// @[TLSPI.scala:67:17]
        ctrl_wm_tx = _RANDOM_1[29:26];	// @[TLSPI.scala:67:17]
        ctrl_wm_rx = {_RANDOM_1[31:30], _RANDOM_2[1:0]};	// @[TLSPI.scala:67:17]
        ctrl_extradel_coarse = _RANDOM_2[13:2];	// @[TLSPI.scala:67:17]
        ctrl_sampledel_sd = _RANDOM_2[18:14];	// @[TLSPI.scala:67:17]
        ie_txwm = _RANDOM_2[19];	// @[TLSPI.scala:67:17, :81:15]
        ie_rxwm = _RANDOM_2[20];	// @[TLSPI.scala:67:17, :81:15]
        a_size = _RANDOM_2[27];	// @[TLSPI.scala:67:17, TLSPIFlash.scala:66:14]
        a_source = {_RANDOM_2[31:28], _RANDOM_3[7:0]};	// @[TLSPI.scala:67:17, TLSPIFlash.scala:66:14]
        a_address = {_RANDOM_3[31:8], _RANDOM_4[5:0]};	// @[TLSPIFlash.scala:66:14]
        insn_cmd_proto = _RANDOM_4[17:16];	// @[TLSPIFlash.scala:66:14, :82:17]
        insn_cmd_code = _RANDOM_4[25:18];	// @[TLSPIFlash.scala:66:14, :82:17]
        insn_cmd_en = _RANDOM_4[26];	// @[TLSPIFlash.scala:66:14, :82:17]
        insn_addr_proto = _RANDOM_4[28:27];	// @[TLSPIFlash.scala:66:14, :82:17]
        insn_addr_len = _RANDOM_4[31:29];	// @[TLSPIFlash.scala:66:14, :82:17]
        insn_pad_code = _RANDOM_5[7:0];	// @[TLSPIFlash.scala:82:17]
        insn_pad_cnt = _RANDOM_5[11:8];	// @[TLSPIFlash.scala:82:17]
        insn_data_proto = _RANDOM_5[13:12];	// @[TLSPIFlash.scala:82:17]
        flash_en = _RANDOM_5[14];	// @[TLSPIFlash.scala:82:17, :83:21]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  IntSyncCrossingSource_1 intsource (	// @[Crossing.scala:28:31]
    .clock           (clock),
    .reset           (reset),
    .auto_in_0       (_fifo_io_ip_txwm & ie_txwm | _fifo_io_ip_rxwm & ie_rxwm),	// @[TLSPI.scala:68:20, :81:15, :83:{35,47,59}]
    .auto_out_sync_0 (auto_int_xing_out_sync_0)
  );
  SPIFIFO fifo (	// @[TLSPI.scala:68:20]
    .clock              (clock),
    .reset              (reset),
    .io_ctrl_fmt_proto  (ctrl_fmt_proto),	// @[TLSPI.scala:67:17]
    .io_ctrl_fmt_endian (ctrl_fmt_endian),	// @[TLSPI.scala:67:17]
    .io_ctrl_fmt_iodir  (ctrl_fmt_iodir),	// @[TLSPI.scala:67:17]
    .io_ctrl_fmt_len    (ctrl_fmt_len),	// @[TLSPI.scala:67:17]
    .io_ctrl_cs_mode    (ctrl_cs_mode),	// @[TLSPI.scala:67:17]
    .io_ctrl_wm_tx      (ctrl_wm_tx),	// @[TLSPI.scala:67:17]
    .io_ctrl_wm_rx      (ctrl_wm_rx),	// @[TLSPI.scala:67:17]
    .io_link_tx_ready   (_arb_io_inner_1_tx_ready),	// @[TLSPIFlash.scala:58:19]
    .io_link_rx_valid   (_arb_io_inner_1_rx_valid),	// @[TLSPIFlash.scala:58:19]
    .io_link_rx_bits    (_arb_io_inner_1_rx_bits),	// @[TLSPIFlash.scala:58:19]
    .io_tx_valid        (out_woready_15 & auto_control_xing_in_a_bits_mask[0] & ~quash),	// @[Bitwise.scala:28:17, RegMapFIFO.scala:18:{30,33}, :26:26, RegisterRouter.scala:83:24]
    .io_tx_bits         (auto_control_xing_in_a_bits_data[7:0]),	// @[RegisterRouter.scala:83:24]
    .io_rx_ready        (_out_wofireMux_T & out_front_bits_read & out_backSel_9 & _out_out_bits_data_WIRE_14 & auto_control_xing_in_a_bits_mask[4]),	// @[Bitwise.scala:28:17, RegisterRouter.scala:72:36, :83:24]
    .io_link_tx_valid   (_fifo_io_link_tx_valid),
    .io_link_tx_bits    (_fifo_io_link_tx_bits),
    .io_link_cnt        (_fifo_io_link_cnt),
    .io_link_fmt_proto  (_fifo_io_link_fmt_proto),
    .io_link_fmt_endian (_fifo_io_link_fmt_endian),
    .io_link_fmt_iodir  (_fifo_io_link_fmt_iodir),
    .io_link_cs_set     (_fifo_io_link_cs_set),
    .io_link_cs_clear   (_fifo_io_link_cs_clear),
    .io_link_lock       (_fifo_io_link_lock),
    .io_tx_ready        (_fifo_io_tx_ready),
    .io_rx_valid        (_fifo_io_rx_valid),
    .io_rx_bits         (_fifo_io_rx_bits),
    .io_ip_txwm         (_fifo_io_ip_txwm),
    .io_ip_rxwm         (_fifo_io_ip_rxwm)
  );
  SPIMedia mac (	// @[TLSPI.scala:69:19]
    .clock                   (clock),
    .reset                   (reset),
    .io_port_dq_0_i          (auto_io_out_dq_0_i),
    .io_port_dq_1_i          (auto_io_out_dq_1_i),
    .io_port_dq_2_i          (auto_io_out_dq_2_i),
    .io_port_dq_3_i          (auto_io_out_dq_3_i),
    .io_ctrl_sck_div         (ctrl_sck_div),	// @[TLSPI.scala:67:17]
    .io_ctrl_sck_pol         (ctrl_sck_pol),	// @[TLSPI.scala:67:17]
    .io_ctrl_sck_pha         (ctrl_sck_pha),	// @[TLSPI.scala:67:17]
    .io_ctrl_dla_cssck       (ctrl_dla_cssck),	// @[TLSPI.scala:67:17]
    .io_ctrl_dla_sckcs       (ctrl_dla_sckcs),	// @[TLSPI.scala:67:17]
    .io_ctrl_dla_intercs     (ctrl_dla_intercs),	// @[TLSPI.scala:67:17]
    .io_ctrl_dla_interxfr    (ctrl_dla_interxfr),	// @[TLSPI.scala:67:17]
    .io_ctrl_cs_id           (ctrl_cs_id),	// @[TLSPI.scala:67:17]
    .io_ctrl_cs_dflt_0       (ctrl_cs_dflt_0),	// @[TLSPI.scala:67:17]
    .io_ctrl_extradel_coarse (ctrl_extradel_coarse),	// @[TLSPI.scala:67:17]
    .io_ctrl_sampledel_sd    (ctrl_sampledel_sd),	// @[TLSPI.scala:67:17]
    .io_link_tx_valid        (_arb_io_outer_tx_valid),	// @[TLSPIFlash.scala:58:19]
    .io_link_tx_bits         (_arb_io_outer_tx_bits),	// @[TLSPIFlash.scala:58:19]
    .io_link_cnt             (_arb_io_outer_cnt),	// @[TLSPIFlash.scala:58:19]
    .io_link_fmt_proto       (_arb_io_outer_fmt_proto),	// @[TLSPIFlash.scala:58:19]
    .io_link_fmt_endian      (_arb_io_outer_fmt_endian),	// @[TLSPIFlash.scala:58:19]
    .io_link_fmt_iodir       (_arb_io_outer_fmt_iodir),	// @[TLSPIFlash.scala:58:19]
    .io_link_cs_set          (_arb_io_outer_cs_set),	// @[TLSPIFlash.scala:58:19]
    .io_link_cs_clear        (_arb_io_outer_cs_clear),	// @[TLSPIFlash.scala:58:19]
    .io_link_cs_hold         (_arb_io_outer_cs_hold),	// @[TLSPIFlash.scala:58:19]
    .io_port_sck             (auto_io_out_sck),
    .io_port_dq_0_o          (auto_io_out_dq_0_o),
    .io_port_dq_0_ie         (auto_io_out_dq_0_ie),
    .io_port_dq_0_oe         (auto_io_out_dq_0_oe),
    .io_port_dq_1_o          (auto_io_out_dq_1_o),
    .io_port_dq_1_ie         (auto_io_out_dq_1_ie),
    .io_port_dq_1_oe         (auto_io_out_dq_1_oe),
    .io_port_dq_2_o          (auto_io_out_dq_2_o),
    .io_port_dq_2_ie         (auto_io_out_dq_2_ie),
    .io_port_dq_2_oe         (auto_io_out_dq_2_oe),
    .io_port_dq_3_o          (auto_io_out_dq_3_o),
    .io_port_dq_3_ie         (auto_io_out_dq_3_ie),
    .io_port_dq_3_oe         (auto_io_out_dq_3_oe),
    .io_port_cs_0            (auto_io_out_cs_0),
    .io_link_tx_ready        (_mac_io_link_tx_ready),
    .io_link_rx_valid        (_mac_io_link_rx_valid),
    .io_link_rx_bits         (_mac_io_link_rx_bits),
    .io_link_active          (_mac_io_link_active)
  );
  SPIFlashMap flash (	// @[TLSPIFlash.scala:57:21]
    .clock                   (clock),
    .reset                   (reset),
    .io_en                   (flash_en),	// @[TLSPIFlash.scala:83:21]
    .io_ctrl_insn_cmd_proto  (insn_cmd_proto),	// @[TLSPIFlash.scala:82:17]
    .io_ctrl_insn_cmd_code   (insn_cmd_code),	// @[TLSPIFlash.scala:82:17]
    .io_ctrl_insn_cmd_en     (insn_cmd_en),	// @[TLSPIFlash.scala:82:17]
    .io_ctrl_insn_addr_proto (insn_addr_proto),	// @[TLSPIFlash.scala:82:17]
    .io_ctrl_insn_addr_len   (insn_addr_len),	// @[TLSPIFlash.scala:82:17]
    .io_ctrl_insn_pad_code   (insn_pad_code),	// @[TLSPIFlash.scala:82:17]
    .io_ctrl_insn_pad_cnt    (insn_pad_cnt),	// @[TLSPIFlash.scala:82:17]
    .io_ctrl_insn_data_proto (insn_data_proto),	// @[TLSPIFlash.scala:82:17]
    .io_ctrl_fmt_endian      (ctrl_fmt_endian),	// @[TLSPI.scala:67:17]
    .io_addr_valid           (auto_mem_xing_in_a_valid),
    .io_addr_bits_next       ({7'h0, auto_mem_xing_in_a_bits_address[24:0]}),	// @[TLSPIFlash.scala:73:{27,46}]
    .io_addr_bits_hold       ({7'h0, a_address[24:0]}),	// @[TLSPIFlash.scala:66:14, :73:27, :74:{27,39}]
    .io_data_ready           (auto_mem_xing_in_d_ready),
    .io_link_tx_ready        (_arb_io_inner_0_tx_ready),	// @[TLSPIFlash.scala:58:19]
    .io_link_rx_valid        (_arb_io_inner_0_rx_valid),	// @[TLSPIFlash.scala:58:19]
    .io_link_rx_bits         (_arb_io_inner_0_rx_bits),	// @[TLSPIFlash.scala:58:19]
    .io_link_active          (_arb_io_inner_0_active),	// @[TLSPIFlash.scala:58:19]
    .io_addr_ready           (_flash_io_addr_ready),
    .io_data_valid           (auto_mem_xing_in_d_valid),
    .io_data_bits            (auto_mem_xing_in_d_bits_data),
    .io_link_tx_valid        (_flash_io_link_tx_valid),
    .io_link_tx_bits         (_flash_io_link_tx_bits),
    .io_link_cnt             (_flash_io_link_cnt),
    .io_link_fmt_proto       (_flash_io_link_fmt_proto),
    .io_link_fmt_endian      (_flash_io_link_fmt_endian),
    .io_link_fmt_iodir       (_flash_io_link_fmt_iodir),
    .io_link_cs_clear        (_flash_io_link_cs_clear),
    .io_link_lock            (_flash_io_link_lock)
  );
  SPIArbiter arb (	// @[TLSPIFlash.scala:58:19]
    .clock                 (clock),
    .reset                 (reset),
    .io_inner_0_tx_valid   (_flash_io_link_tx_valid),	// @[TLSPIFlash.scala:57:21]
    .io_inner_0_tx_bits    (_flash_io_link_tx_bits),	// @[TLSPIFlash.scala:57:21]
    .io_inner_0_cnt        (_flash_io_link_cnt),	// @[TLSPIFlash.scala:57:21]
    .io_inner_0_fmt_proto  (_flash_io_link_fmt_proto),	// @[TLSPIFlash.scala:57:21]
    .io_inner_0_fmt_endian (_flash_io_link_fmt_endian),	// @[TLSPIFlash.scala:57:21]
    .io_inner_0_fmt_iodir  (_flash_io_link_fmt_iodir),	// @[TLSPIFlash.scala:57:21]
    .io_inner_0_cs_clear   (_flash_io_link_cs_clear),	// @[TLSPIFlash.scala:57:21]
    .io_inner_0_lock       (_flash_io_link_lock),	// @[TLSPIFlash.scala:57:21]
    .io_inner_1_tx_valid   (_fifo_io_link_tx_valid),	// @[TLSPI.scala:68:20]
    .io_inner_1_tx_bits    (_fifo_io_link_tx_bits),	// @[TLSPI.scala:68:20]
    .io_inner_1_cnt        (_fifo_io_link_cnt),	// @[TLSPI.scala:68:20]
    .io_inner_1_fmt_proto  (_fifo_io_link_fmt_proto),	// @[TLSPI.scala:68:20]
    .io_inner_1_fmt_endian (_fifo_io_link_fmt_endian),	// @[TLSPI.scala:68:20]
    .io_inner_1_fmt_iodir  (_fifo_io_link_fmt_iodir),	// @[TLSPI.scala:68:20]
    .io_inner_1_cs_set     (_fifo_io_link_cs_set),	// @[TLSPI.scala:68:20]
    .io_inner_1_cs_clear   (_fifo_io_link_cs_clear),	// @[TLSPI.scala:68:20]
    .io_inner_1_lock       (_fifo_io_link_lock),	// @[TLSPI.scala:68:20]
    .io_outer_tx_ready     (_mac_io_link_tx_ready),	// @[TLSPI.scala:69:19]
    .io_outer_rx_valid     (_mac_io_link_rx_valid),	// @[TLSPI.scala:69:19]
    .io_outer_rx_bits      (_mac_io_link_rx_bits),	// @[TLSPI.scala:69:19]
    .io_outer_active       (_mac_io_link_active),	// @[TLSPI.scala:69:19]
    .io_sel                (~flash_en),	// @[TLSPIFlash.scala:83:21, :88:17]
    .io_inner_0_tx_ready   (_arb_io_inner_0_tx_ready),
    .io_inner_0_rx_valid   (_arb_io_inner_0_rx_valid),
    .io_inner_0_rx_bits    (_arb_io_inner_0_rx_bits),
    .io_inner_0_active     (_arb_io_inner_0_active),
    .io_inner_1_tx_ready   (_arb_io_inner_1_tx_ready),
    .io_inner_1_rx_valid   (_arb_io_inner_1_rx_valid),
    .io_inner_1_rx_bits    (_arb_io_inner_1_rx_bits),
    .io_outer_tx_valid     (_arb_io_outer_tx_valid),
    .io_outer_tx_bits      (_arb_io_outer_tx_bits),
    .io_outer_cnt          (_arb_io_outer_cnt),
    .io_outer_fmt_proto    (_arb_io_outer_fmt_proto),
    .io_outer_fmt_endian   (_arb_io_outer_fmt_endian),
    .io_outer_fmt_iodir    (_arb_io_outer_fmt_iodir),
    .io_outer_cs_set       (_arb_io_outer_cs_set),
    .io_outer_cs_clear     (_arb_io_outer_cs_clear),
    .io_outer_cs_hold      (_arb_io_outer_cs_hold)
  );
  assign auto_mem_xing_in_a_ready = _flash_io_addr_ready;	// @[TLSPIFlash.scala:57:21]
  assign auto_mem_xing_in_d_bits_size = a_size;	// @[TLSPIFlash.scala:66:14]
  assign auto_mem_xing_in_d_bits_source = a_source;	// @[TLSPIFlash.scala:66:14]
  assign auto_control_xing_in_a_ready = auto_control_xing_in_d_ready;
  assign auto_control_xing_in_d_valid = auto_control_xing_in_a_valid;
  assign auto_control_xing_in_d_bits_opcode = {2'h0, out_front_bits_read};	// @[Bundles.scala:259:74, RegisterRouter.scala:72:36, :98:19]
  assign auto_control_xing_in_d_bits_size = auto_control_xing_in_a_bits_size;
  assign auto_control_xing_in_d_bits_source = auto_control_xing_in_a_bits_source;
  assign auto_control_xing_in_d_bits_data = _GEN[auto_control_xing_in_a_bits_address[6:3]] ? _GEN_0[auto_control_xing_in_a_bits_address[6:3]] : 64'h0;	// @[Bundles.scala:259:74, Cat.scala:33:92, MuxLiteral.scala:49:10, RegisterRouter.scala:83:24]
endmodule


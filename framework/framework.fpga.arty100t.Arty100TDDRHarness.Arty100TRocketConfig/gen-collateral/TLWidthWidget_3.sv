// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module TLWidthWidget_3(
  input         clock,
                reset,
                auto_in_a_valid,
  input  [2:0]  auto_in_a_bits_opcode,
                auto_in_a_bits_param,
                auto_in_a_bits_size,
  input  [4:0]  auto_in_a_bits_source,
  input  [29:0] auto_in_a_bits_address,
  input  [7:0]  auto_in_a_bits_mask,
  input         auto_in_a_bits_corrupt,
                auto_in_d_ready,
                auto_out_a_ready,
                auto_out_d_valid,
  input  [2:0]  auto_out_d_bits_size,
  input  [4:0]  auto_out_d_bits_source,
  input  [7:0]  auto_out_d_bits_data,
  output        auto_in_a_ready,
                auto_in_d_valid,
  output [2:0]  auto_in_d_bits_size,
  output [4:0]  auto_in_d_bits_source,
  output [63:0] auto_in_d_bits_data,
  output        auto_out_a_valid,
  output [2:0]  auto_out_a_bits_opcode,
                auto_out_a_bits_param,
                auto_out_a_bits_size,
  output [4:0]  auto_out_a_bits_source,
  output [29:0] auto_out_a_bits_address,
  output        auto_out_a_bits_mask,
                auto_out_a_bits_corrupt,
                auto_out_d_ready
);

  wire [29:0] _repeated_repeater_io_deq_bits_address;	// @[Repeater.scala:35:26]
  wire [7:0]  _repeated_repeater_io_deq_bits_mask;	// @[Repeater.scala:35:26]
  wire [7:0]  _GEN = {{_repeated_repeater_io_deq_bits_mask[7]}, {_repeated_repeater_io_deq_bits_mask[6]}, {_repeated_repeater_io_deq_bits_mask[5]}, {_repeated_repeater_io_deq_bits_mask[4]}, {_repeated_repeater_io_deq_bits_mask[3]}, {_repeated_repeater_io_deq_bits_mask[2]}, {_repeated_repeater_io_deq_bits_mask[1]}, {_repeated_repeater_io_deq_bits_mask[0]}};	// @[Repeater.scala:35:26, WidthWidget.scala:123:55, :135:53]
  wire [9:0]  _limit_T_1 = 10'h7 << auto_out_d_bits_size;	// @[package.scala:235:71]
  reg  [2:0]  count;	// @[WidthWidget.scala:35:27]
  wire        last = count == ~(_limit_T_1[2:0]);	// @[WidthWidget.scala:35:27, :37:26, package.scala:235:{46,71,76}]
  wire        x1_d_ready = auto_in_d_ready | ~last;	// @[WidthWidget.scala:37:26, :71:{29,32}]
  reg         bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:57:41]
  wire        bundleIn_0_d_bits_data_masked_enable_0 = (count & ~(_limit_T_1[2:0])) == 3'h0 | ~bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:35:27, :38:{63,72}, :57:41, :58:{42,45}, :100:26, package.scala:235:{46,71,76}]
  wire        bundleIn_0_d_bits_data_masked_enable_1 = ((count ^ 3'h1) & ~(_limit_T_1[2:0])) == 3'h0 | ~bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:35:27, :38:{56,63,72}, :57:41, :58:{42,45}, :100:26, package.scala:235:{46,71,76}]
  wire        bundleIn_0_d_bits_data_masked_enable_2 = ((count ^ 3'h2) & ~(_limit_T_1[2:0])) == 3'h0 | ~bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:35:27, :38:{56,63,72}, :57:41, :58:{42,45}, :100:26, package.scala:235:{46,71,76}]
  wire        bundleIn_0_d_bits_data_masked_enable_3 = ((count ^ 3'h3) & ~(_limit_T_1[2:0])) == 3'h0 | ~bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:35:27, :38:{56,63,72}, :57:41, :58:{42,45}, :100:26, package.scala:235:{46,71,76}]
  wire        bundleIn_0_d_bits_data_masked_enable_4 = ((count ^ 3'h4) & ~(_limit_T_1[2:0])) == 3'h0 | ~bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:35:27, :38:{56,63,72}, :57:41, :58:{42,45}, :100:26, package.scala:235:{46,71,76}]
  wire        bundleIn_0_d_bits_data_masked_enable_5 = ((count ^ 3'h5) & ~(_limit_T_1[2:0])) == 3'h0 | ~bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:35:27, :38:{56,63,72}, :57:41, :58:{42,45}, :100:26, package.scala:235:{46,71,76}]
  wire        bundleIn_0_d_bits_data_masked_enable_6 = ((count ^ 3'h6) & ~(_limit_T_1[2:0])) == 3'h0 | ~bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:35:27, :38:{56,63,72}, :57:41, :58:{42,45}, :100:26, package.scala:235:{46,71,76}]
  reg  [7:0]  bundleIn_0_d_bits_data_rdata_0;	// @[WidthWidget.scala:61:24]
  reg  [7:0]  bundleIn_0_d_bits_data_rdata_1;	// @[WidthWidget.scala:61:24]
  reg  [7:0]  bundleIn_0_d_bits_data_rdata_2;	// @[WidthWidget.scala:61:24]
  reg  [7:0]  bundleIn_0_d_bits_data_rdata_3;	// @[WidthWidget.scala:61:24]
  reg  [7:0]  bundleIn_0_d_bits_data_rdata_4;	// @[WidthWidget.scala:61:24]
  reg  [7:0]  bundleIn_0_d_bits_data_rdata_5;	// @[WidthWidget.scala:61:24]
  reg  [7:0]  bundleIn_0_d_bits_data_rdata_6;	// @[WidthWidget.scala:61:24]
  wire        _bundleIn_0_d_bits_data_T = x1_d_ready & auto_out_d_valid;	// @[Decoupled.scala:51:35, WidthWidget.scala:71:29]
  wire        _bundleIn_0_d_bits_data_T_2 = _bundleIn_0_d_bits_data_T & ~last;	// @[Decoupled.scala:51:35, WidthWidget.scala:37:26, :64:25, :71:32]
  always @(posedge clock) begin
    if (reset) begin
      count <= 3'h0;	// @[WidthWidget.scala:35:27, :100:26]
      bundleIn_0_d_bits_data_rdata_written_once <= 1'h0;	// @[WidthWidget.scala:57:41]
    end
    else begin
      if (_bundleIn_0_d_bits_data_T) begin	// @[Decoupled.scala:51:35]
        if (last)	// @[WidthWidget.scala:37:26]
          count <= 3'h0;	// @[WidthWidget.scala:35:27, :100:26]
        else	// @[WidthWidget.scala:37:26]
          count <= count + 3'h1;	// @[WidthWidget.scala:35:27, :45:24]
      end
      bundleIn_0_d_bits_data_rdata_written_once <= _bundleIn_0_d_bits_data_T_2 | bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:57:41, :64:{25,35}, :65:30]
    end
    if (_bundleIn_0_d_bits_data_T_2 & bundleIn_0_d_bits_data_masked_enable_0)	// @[WidthWidget.scala:58:42, :61:24, :63:88, :64:{25,35}, :66:56]
      bundleIn_0_d_bits_data_rdata_0 <= auto_out_d_bits_data;	// @[WidthWidget.scala:61:24]
    if (_bundleIn_0_d_bits_data_T_2 & bundleIn_0_d_bits_data_masked_enable_1)	// @[WidthWidget.scala:58:42, :61:24, :63:88, :64:{25,35}, :66:56]
      bundleIn_0_d_bits_data_rdata_1 <= auto_out_d_bits_data;	// @[WidthWidget.scala:61:24]
    if (_bundleIn_0_d_bits_data_T_2 & bundleIn_0_d_bits_data_masked_enable_2)	// @[WidthWidget.scala:58:42, :61:24, :63:88, :64:{25,35}, :66:56]
      bundleIn_0_d_bits_data_rdata_2 <= auto_out_d_bits_data;	// @[WidthWidget.scala:61:24]
    if (_bundleIn_0_d_bits_data_T_2 & bundleIn_0_d_bits_data_masked_enable_3)	// @[WidthWidget.scala:58:42, :61:24, :63:88, :64:{25,35}, :66:56]
      bundleIn_0_d_bits_data_rdata_3 <= auto_out_d_bits_data;	// @[WidthWidget.scala:61:24]
    if (_bundleIn_0_d_bits_data_T_2 & bundleIn_0_d_bits_data_masked_enable_4)	// @[WidthWidget.scala:58:42, :61:24, :63:88, :64:{25,35}, :66:56]
      bundleIn_0_d_bits_data_rdata_4 <= auto_out_d_bits_data;	// @[WidthWidget.scala:61:24]
    if (_bundleIn_0_d_bits_data_T_2 & bundleIn_0_d_bits_data_masked_enable_5)	// @[WidthWidget.scala:58:42, :61:24, :63:88, :64:{25,35}, :66:56]
      bundleIn_0_d_bits_data_rdata_5 <= auto_out_d_bits_data;	// @[WidthWidget.scala:61:24]
    if (_bundleIn_0_d_bits_data_T_2 & bundleIn_0_d_bits_data_masked_enable_6)	// @[WidthWidget.scala:58:42, :61:24, :63:88, :64:{25,35}, :66:56]
      bundleIn_0_d_bits_data_rdata_6 <= auto_out_d_bits_data;	// @[WidthWidget.scala:61:24]
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        count = _RANDOM_0[5:3];	// @[WidthWidget.scala:35:27]
        bundleIn_0_d_bits_data_rdata_written_once = _RANDOM_0[7];	// @[WidthWidget.scala:35:27, :57:41]
        bundleIn_0_d_bits_data_rdata_0 = _RANDOM_0[15:8];	// @[WidthWidget.scala:35:27, :61:24]
        bundleIn_0_d_bits_data_rdata_1 = _RANDOM_0[23:16];	// @[WidthWidget.scala:35:27, :61:24]
        bundleIn_0_d_bits_data_rdata_2 = _RANDOM_0[31:24];	// @[WidthWidget.scala:35:27, :61:24]
        bundleIn_0_d_bits_data_rdata_3 = _RANDOM_1[7:0];	// @[WidthWidget.scala:61:24]
        bundleIn_0_d_bits_data_rdata_4 = _RANDOM_1[15:8];	// @[WidthWidget.scala:61:24]
        bundleIn_0_d_bits_data_rdata_5 = _RANDOM_1[23:16];	// @[WidthWidget.scala:61:24]
        bundleIn_0_d_bits_data_rdata_6 = _RANDOM_1[31:24];	// @[WidthWidget.scala:61:24]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Repeater_6 repeated_repeater (	// @[Repeater.scala:35:26]
    .io_enq_valid        (auto_in_a_valid),
    .io_enq_bits_opcode  (auto_in_a_bits_opcode),
    .io_enq_bits_param   (auto_in_a_bits_param),
    .io_enq_bits_size    (auto_in_a_bits_size),
    .io_enq_bits_source  (auto_in_a_bits_source),
    .io_enq_bits_address (auto_in_a_bits_address),
    .io_enq_bits_mask    (auto_in_a_bits_mask),
    .io_enq_bits_corrupt (auto_in_a_bits_corrupt),
    .io_deq_ready        (auto_out_a_ready),
    .io_enq_ready        (auto_in_a_ready),
    .io_deq_valid        (auto_out_a_valid),
    .io_deq_bits_opcode  (auto_out_a_bits_opcode),
    .io_deq_bits_param   (auto_out_a_bits_param),
    .io_deq_bits_size    (auto_out_a_bits_size),
    .io_deq_bits_source  (auto_out_a_bits_source),
    .io_deq_bits_address (_repeated_repeater_io_deq_bits_address),
    .io_deq_bits_mask    (_repeated_repeater_io_deq_bits_mask),
    .io_deq_bits_corrupt (auto_out_a_bits_corrupt)
  );
  assign auto_in_d_valid = auto_out_d_valid & last;	// @[WidthWidget.scala:37:26, :72:29]
  assign auto_in_d_bits_size = auto_out_d_bits_size;
  assign auto_in_d_bits_source = auto_out_d_bits_source;
  assign auto_in_d_bits_data = {auto_out_d_bits_data, bundleIn_0_d_bits_data_masked_enable_6 ? auto_out_d_bits_data : bundleIn_0_d_bits_data_rdata_6, bundleIn_0_d_bits_data_masked_enable_5 ? auto_out_d_bits_data : bundleIn_0_d_bits_data_rdata_5, bundleIn_0_d_bits_data_masked_enable_4 ? auto_out_d_bits_data : bundleIn_0_d_bits_data_rdata_4, bundleIn_0_d_bits_data_masked_enable_3 ? auto_out_d_bits_data : bundleIn_0_d_bits_data_rdata_3, bundleIn_0_d_bits_data_masked_enable_2 ? auto_out_d_bits_data : bundleIn_0_d_bits_data_rdata_2, bundleIn_0_d_bits_data_masked_enable_1 ? auto_out_d_bits_data : bundleIn_0_d_bits_data_rdata_1, bundleIn_0_d_bits_data_masked_enable_0 ? auto_out_d_bits_data : bundleIn_0_d_bits_data_rdata_0};	// @[Cat.scala:33:92, WidthWidget.scala:58:42, :61:24, :63:88]
  assign auto_out_a_bits_address = _repeated_repeater_io_deq_bits_address;	// @[Repeater.scala:35:26]
  assign auto_out_a_bits_mask = _GEN[_repeated_repeater_io_deq_bits_address[2:0]];	// @[Repeater.scala:35:26, WidthWidget.scala:111:39, :135:53]
  assign auto_out_d_ready = x1_d_ready;	// @[WidthWidget.scala:71:29]
endmodule

